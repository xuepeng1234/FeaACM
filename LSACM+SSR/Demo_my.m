clc; clear all; close all;

addpath('./image');
addpath('./imgs');
flag = 27;

switch flag
    case 1
        img = double(imread('nonHom3.gif'));
        [row, col] = size(img);
        I = imresize(img, 0.1, 'nearest');
        [nrow, ncol] = size(I);
        r = 20;
        sigma = 5;
        Iternum = 20; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.001 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.9;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2).^2 + (Y - row / 2).^2) - r;
    case 2
        img = double(imread('noisyNonUniform.bmp'));
        [row, col] = size(img);
        I = imresize(img, 0.1, 'nearest');
        [nrow, ncol] = size(I);
        r = 20;
        sigma = 2.5;
        Iternum = 1200; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.001 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.95;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2).^2 + (Y - row / 2).^2) - r;
	case 3
        img = imread('f95.bmp');
        img = double(img(:, :, 1));
        [row, col] = size(img);
        I = imresize(img, 0.1, 'nearest');
        [nrow, ncol] = size(I);
        r = 20;
        sigma = 5;
        Iternum = 1200; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.0008 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.9;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2).^2 + (Y - row / 2).^2) - r;
    case 4
        img = double(imread('5.bmp'));
        [row, col] = size(img);
        I = imresize(img, 0.1, 'nearest');
        [nrow, ncol] = size(I);
        r = 15;
        sigma = 5;
        Iternum = 300; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.0001 * 255^2; % the parameter of length regularization term
        mu = 0.01; % the parameter of signed distance function
        alpha1 = 0.99;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2).^2 + (Y - row / 2).^2) - r;
    case 5
        img = double(imread('vessel2.bmp'));
        [row, col] = size(img);
        I = imresize(img, 0.1, 'nearest');
        [nrow, ncol] = size(I);
        r = 10;
        sigma = 2.5;
        Iternum = 830; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.005 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.95;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - 60).^2 + (Y - 80).^2) - r;
	case 6
        img = double(imread('vessel3.bmp'));
        [row, col] = size(img);
        I = imresize(img, 0.1, 'nearest');
        [nrow, ncol] = size(I);
        r = 20;
        sigma = 5;
        Iternum = 480; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.01 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.95;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - 90).^2 + (Y - 80).^2) - r;
	case 7
        img = imread('T2.bmp');
        img = double(img(:, :, 1));
        [row, col] = size(img);
        I = imresize(img, 0.1, 'nearest');
        [nrow, ncol] = size(I);
        r = 20;
        sigma = 10;
        Iternum = 150; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.001 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.95;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2).^2 + (Y - row / 2).^2) - r;
	case 8
        img = imread('3Tb.bmp');
        img = double(img(:, :, 1));
        [row, col] = size(img);
        I = imresize(img, 0.1, 'nearest');
        [nrow, ncol] = size(I);
        r = 15;
        sigma = 3;
        Iternum = 850; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.0001 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.95;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2).^2 + (Y - row / 2).^2) - r;
    case 9
        img = double(imread('113044.jpg'));
%         W = fspecial('gaussian', [9,9]);
%         img = imfilter(img, W);
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 7.5;
        Iternum = 1150; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.03 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.3;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 + 20).^2 / 2 + (Y - row / 2 + 15).^2) - 120;
%         phi = ones(row, col) .* -1;
%         phi(50:200, 20:350) = 1;
        GT = imread('9.bmp');
    case 10
        img = double(imread('8068.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 7.5;
        Iternum = 500; % Iternum is the number of iterations
        epsilon = 0.1;
        timestep = 1;
        nu = 0.05 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.2;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 - 75).^2 / 3 + (Y - row / 2).^2) - 75;
        GT = imread('10.bmp');
    case 11
        img = double(imread('163014.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 7.5;
        Iternum = 50; % Iternum is the number of iterations
        epsilon = 0.1;
        timestep = 1;
        nu = 0.03 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function;
        alpha1 = 0.4;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 + 50).^2 + (Y - row / 2 + 50).^2 / 3) - 50;
        GT = imread('11.bmp');
    case 12
        img = double(imread('196027.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 7.5;
        Iternum = 400; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.08 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function;
        alpha1 = 0.2;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 - 10).^2 + (Y - row / 2 + 50).^2 / 3) - 50;
        GT = imread('12.bmp');
	case 13
        img = double(imread('196015.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 5;
        Iternum = 600; % Iternum is the number of iterations
        epsilon = 0.5;
        timestep = 1;
        nu = 0.06 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function;
        alpha1 = 0.6;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 - 10).^2 / 2 + (Y - row / 2 - 10).^2) - 20;
        GT = imread('13.bmp');
    case 14
        img = double(imread('135069.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 7.5;
        Iternum = 160; % Iternum is the number of iterations
        epsilon = 0.1;
        timestep = 1;
        nu = 0.001 * 255^2; % the parameter of length regularization term
        mu = 0.01; % the parameter of signed distance function
        alpha1 = 0.4;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 - 25).^2 + (Y - row / 2 + 40).^2) - 25;
        GT = imread('14.bmp');
%         phi = ones(row, col) .* 1; % initial contour 2
%         phi(100:140, 250:280) = -1;
%         Iternum = 620; % Iternum is the number of iterationalpha1s
%         sigma = 20;
%         alpha1 = 0.5;
%         alpha2 = 1 - alpha1;
%         phi = sqrt((X - col / 2 - 15).^2 + (Y - row / 2 + 40).^2 / 3) - 30; % initial contour 3
%         Iternum = 100; % Iternum is the number of iterations
%         sigma = 20;
%         alpha1 = 0.5;
%         alpha2 = 1 - alpha1;
%         phi = sqrt((X - col / 2 - 25).^2 / 4 + (Y - row / 2 + 40).^2) - 30; % initial contour 4
%         Iternum = 100; % Iternum is the number of iterations
%         sigma = 20;
%         alpha1 = 0.6;
%         alpha2 = 1 - alpha1;
%         phi = ones(row, col); % initial contour 5
%         phi(80:200, 200:300) = -1;
%         Iternum = 500;
%         sigma = 30;
%         alpha1 = 0.2;
%         alpha2 = 1 - alpha1;
%         phi = ones(row, col) .* -1; % initial contour 6
%         phi(150:190, 150:180) = 1;
%         sigma = 20;
%         Iternum = 500;
%         alpha1 = 0.3;
%         alpha2 = 1 - alpha1;
    case 15
        img = double(imread('66075.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 5;
        Iternum = 320; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.04 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.5;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2).^2 + (Y - row / 2 + 20).^2 / 4) - 60;
        GT = imread('15.bmp');
    case 16
        img = double(imread('100039.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 6;
        Iternum = 740; % Iternum is the number of iterations
        epsilon = 0.1;
        timestep = 1;
        nu = 0.03 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function;
        alpha1 = 0.4;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 - 5).^2 + (Y - row / 2 - 75).^2 / 3) - 50;
        GT = imread('16.bmp');
	case 17
        img = double(imread('103078.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 5;
        Iternum = 680; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.04 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function;
        alpha1 = 0.3;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 - 40).^2 / 8 + (Y - row / 2 + 5).^2) - 35;
        GT = imread('17.bmp');
    case 18
        img = double(imread('208001.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 3;
        Iternum = 1350; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.03 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function;
        alpha1 = 0.5;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 + 40).^2 + (Y - row / 2 - 65).^2 / 16) - 30;
        GT = imread('18.bmp');
    case 19
        img = double(imread('48025.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 3.5;
        Iternum = 500; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.03 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function;
        alpha1 = 0.5;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2).^2 / 5 + (Y - row / 2 - 70).^2) - 50;
        GT = imread('19.bmp');
    case 20
        img = double(imread('3096.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 15;
        Iternum = 30; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.3 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.3;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 - 60).^2 / 2 + (Y - row / 2 - 50).^2) - 30;
        GT = imread('20.jpg');
    case 21
        img = double(imread('3063.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 7.5;
        Iternum = 340; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.05 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function;
        alpha1 = 0.3;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 + 50).^2 / 3 + (Y - row / 2 - 30).^2) - 50;
        GT = imread('21.jpg');
    case 22
        img = double(imread('86016.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 10;
        Iternum = 100; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.1 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.4;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2).^2 / 3 + (Y - row / 2 + 60).^2) - 80;
        GT = imread('22.jpg');
    case 23
        img = double(imread('bbmf_lancaster_july_06.png'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 7.5;
        Iternum = 20; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.01 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.5;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2).^2 + (Y - row / 2 - 10).^2) - 30;
        GT = imread('23.bmp');   
    case 24
        img = double(imread('chain98.png'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 10;
        Iternum = 300; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.01 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.8;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2).^2 / 5 + (Y - row / 2 + 10).^2) - 30;
        GT = imread('24.bmp');
    case 25
        img = double(imread('dscf3583.png'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 10;
        Iternum = 400; % Iternum is the number of iterations
        epsilon = 0.1;
        timestep = 1;
        nu = 0.03 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.1;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 + 40).^2 / 2 + (Y - row / 2 - 40).^2) - 50;
        GT = imread('25.bmp');
    case 26
        img = double(imread('20060319_087.png'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 5;
        Iternum = 1200; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.08 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.2;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 - 45).^2 + (Y - row / 2).^2 / 3) - 30;
        GT = imread('26.bmp');
    case 27
        img = double(imread('hpim1242.png'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 6;
        Iternum = 200; % Iternum is the number of iterations
        epsilon = 0.1;
        timestep = 1;
        nu = 0.01 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.2;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 + 20).^2 + (Y - row / 2).^2 / 3) - 30;
        GT = imread('27.bmp');
    case 29
        img = double(imread('130066.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 7.5;
        Iternum = 400; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.1 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.7;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 + 30).^2 / 2 + (Y - row / 2 - 10).^2) - 60;
        GT = imread('29.bmp');
    case 30
        img = double(imread('123057.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 5;
        Iternum = 1600; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.06 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.6;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 + 50).^2 / 5 + (Y - row / 2).^2) - 40;
        GT = imread('30.bmp');
    case 31
        img = double(imread('12003.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 10;
        Iternum = 500; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.08 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.6;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 - 10).^2 + (Y - row / 2 + 20).^2) - 75;
        GT = imread('31.bmp');
    case 32
        img = double(imread('70011.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 5;
        Iternum = 600; % Iternum is the number of iterations
        epsilon = 1;
        timestep = 1;
        nu = 0.05 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.9;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2).^2 / 2 + (Y - row / 2 - 45).^2) - 25;
        GT = imread('32.bmp');
    case 33
        img = double(imread('100007.jpg'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 5;
        Iternum = 400; % Iternum is the number of iterations
        epsilon = 0.1;
        timestep = 1;
        nu = 0.005 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.9;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2 + 60).^2 / 2 + (Y - row / 2).^2) - 50;
        GT = imread('33.bmp');
    case 34
        img = double(imread('skookumchuk_starfish1.png'));
        row = size(img, 1);
        col = size(img, 2);
        I = imresize(img, 0.1, 'nearest');
        sigma = 5;
        Iternum = 600; % Iternum is the number of iterations
        epsilon = 1.5;
        timestep = 1;
        nu = 0.03 * 255^2; % the parameter of length regularization term
        mu = 0.1; % the parameter of signed distance function
        alpha1 = 0.4;
        alpha2 = 1 - alpha1;
        [X, Y] = meshgrid(1:col, 1:row);
        phi = sqrt((X - col / 2).^2 + (Y - row / 2 - 10).^2) - 50;
        GT = imread('34.bmp');
end

K = ones(4 * sigma + 1); % the constant kernel
% K = fspecial('gaussian', 4 * sigma + 1, sigma); % the Gaussian Kernel
dim = 2; % two phase model

if size(img, 3) == 1
    phi = gray_image(img, I, K, phi, dim, Iternum, epsilon, timestep, mu, nu, alpha1, alpha2, GT);
else
    phi = colorful_image(img, I, K, phi, dim, Iternum, epsilon, timestep, mu, nu, alpha1, alpha2, GT);
end

